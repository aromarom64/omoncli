<%= render 'template/header.erb' %>

variable vDay number;
begin
  :vDay := <%= @day %>;
end;
/

col session_key for 99999 heading 'session|key'
col session_recid for 99999 heading 'session|recid'
col session_stamp for 999999999 heading 'session|stamp'
col command_id for A20 heading 'command|id'
col status for A10 heading 'status'
col start_time heading 'start_time'
col time_taken_display for A12 heading 'time|taken'
col input_type for A10 heading 'input|type'
col output_device_type for A7 heading 'device'
col input_bytes_display for A10 heading 'input'
col output_bytes_display for A10 heading 'output'
col output_bytes_per_sec_display for A10 heading 'per|sec'

set trim on trims on linesize 300 pagesize 4000 timing on;

alter session set nls_date_format = 'YYYY-MM-DD HH24:MI:SS';

spool <%= @filenamespool %> append
prompt Day: <%= @day %>

select b.session_key, b.session_recid, b.session_stamp, b.command_id, b.status, b.start_time,
b.time_taken_display, b.input_type, b.output_device_type, b.input_bytes_display, b.output_bytes_display,
b.output_bytes_per_sec_display
from v$rman_backup_job_details b
where ( b.start_time > (SYSDATE - :vDay) )
order by b.start_time desc
/

col status for a30 tru
col operation for a10 tru

select command_id,operation,status,start_time,end_time,input_bytes,output_bytes,object_type
from v$rman_status 
where status != 'COMPLETED' and status != 'RUNNING' and start_time > (SYSDATE - :vDay)
order by start_time desc
/

/*
select
  j.session_recid, j.session_stamp,
  to_char(j.start_time, 'yyyy-mm-dd hh24:mi:ss') start_time,
  to_char(j.end_time, 'yyyy-mm-dd hh24:mi:ss') end_time,
  (round(j.output_bytes/1024/1024)) output_mbytes, j.status, j.input_type,
  decode(to_char(j.start_time, 'd'), 1, 'Sunday', 2, 'Monday',
                                     3, 'Tuesday', 4, 'Wednesday',
                                     5, 'Thursday', 6, 'Friday',
                                     7, 'Saturday') dow,
  round(j.elapsed_seconds) elapsed_seconds, j.time_taken_display,
  x.cf, x.df, x.i0, x.i1, x.l,
  ro.inst_id output_instance
from V$RMAN_BACKUP_JOB_DETAILS j
  left outer join (select
                     d.session_recid, d.session_stamp,
                     sum(case when d.controlfile_included = 'YES' then d.pieces else 0 end) CF,
                     sum(case when d.controlfile_included = 'NO'
                               and d.backup_type||d.incremental_level = 'D' then d.pieces else 0 end) DF,
                     sum(case when d.backup_type||d.incremental_level = 'D0' then d.pieces else 0 end) I0,
                     sum(case when d.backup_type||d.incremental_level = 'I1' then d.pieces else 0 end) I1,
                     sum(case when d.backup_type = 'L' then d.pieces else 0 end) L
                   from
                     V$BACKUP_SET_DETAILS d
                     join V$BACKUP_SET s on s.set_stamp = d.set_stamp and s.set_count = d.set_count
                   where s.input_file_scan_only = 'NO'
                   group by d.session_recid, d.session_stamp) x
    on x.session_recid = j.session_recid and x.session_stamp = j.session_stamp
  left outer join (select o.session_recid, o.session_stamp, min(inst_id) inst_id
                   from GV$RMAN_OUTPUT o
                   group by o.session_recid, o.session_stamp)
    ro on ro.session_recid = j.session_recid and ro.session_stamp = j.session_stamp
where j.start_time > trunc(sysdate)-:vDay
order by j.start_time
/
*/
<%= render 'template/footer.erb' %>
